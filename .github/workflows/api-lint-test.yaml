# This workflow runs tests and lint on pull requests that touch the api/
# project or its CI configuration.

name: 'API test/lint'

on:
  # Most of the time, we run on pull requests, which lets us handle external PRs
  pull_request:
    paths:
      - 'api/**'
      - 'Makefile'
      - 'shared-data/*/**'
      - '!shared-data/js/**'
  push:
    paths:
      - 'api/**'
      - 'Makefile'
      - 'shared-data/*/**'
      - '!shared-data/js/**'
      - '.github/workflows/api-lint-test.yaml'
      - '.github/actions/python/**'
    branches:
      - '*'
    tags:
      - 'v*'
  workflow_dispatch:


defaults:
  run:
    shell: bash

jobs:
  lint:
    name: 'opentrons package linting'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-node@v1'
        with:
          node-version: '12'
      - uses: 'actions/setup-python@v2'
        with:
          python-version: '3.7'

      - uses: './.github/actions/python/setup'
        with:
          project: 'api'
      - name: Lint
        run: make -C api lint
  test:
    name: 'opentrons package tests'
    needs: [lint]
    strategy:
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-node@v1'
        with:
          node-version: '12'
      - uses: 'actions/setup-python@v2'
        with:
          python-version: '3.7'
      - name: 'set complex environment variables'
        id: 'set-vars'
        uses: actions/github-script@v2
        with:
          script: |
            const branch = context.ref.replace(/^refs\/(?:tags|heads)\//, '')
            const tag = context.ref.startsWith('refs/tags/') ? branch : ''
            console.log(run number is', context.runNumber)
            const buildNumber = context.runNumber + 10000
            core.exportVariable('OT_BRANCH', branch)
            core.exportVariable('OT_TAG', tag)
            core.exportVariable('OT_BUILD', buildNumber)
      - uses: './.github/actions/python/setup'
        with:
          project: 'api'
      - name: Test
        run: make -C api test

      # creds and repository configuration for deploying python wheels
      - if: contains(matrix.os, 'ubuntu') && (github.event_name == 'push') && !startsWith(env.OT_TAG, 'v')
        name: 'set test pypi creds'
        run: |
          echo "::set-env pypi_username:secrets.OT_TEST_PYPI_USERNAME"
          echo "::set-env pypi_password:secrets.OT_TEST_PYPI_PASSWORD"
          echo "::set-env twine_repository_url:'https://test.pypi.org/legacy/'"
      - if: contains(matrix.os, 'ubuntu') && (github.event_name == 'push') && startsWith(env.OT_TAG, 'v')
        name: 'set pypi creds'
        run: |
          echo "::set-env pypi_username:secrets.OT_PYPI_USERNAME"
          echo "::set-env pypi_password:secrets.OT_PYPI_PASSWORD"
          echo "::set-env twine_repository_url:'https://upload.pypi.org/legacy/'"

      - if: contains(matrix.os, 'ubuntu') && (github.event_name == 'push')
        name: Deploy to pypi
        run: |
          QUIET=1 BUILD_NUMBER=${OT_BUILD} make clean-py deploy-py
